{"version":3,"sources":["logo.svg","contexts/LanguageContext.js","services/helper.js","App.js","reportWebVitals.js","index.js"],"names":["parsed","require","parse","window","location","search","defaultLocale","navigator","languages","userLanguage","language","split","hl","decodeURIComponent","LanguageContext","createContext","localeData","t","key","defaultValue","message","LanguageProvider","children","useState","loading","setLoading","useEffect","a","fetch","data","json","enLocale","init","value","Provider","id","App","useContext","logo","edit","and","saveToReload","learnReact","className","src","logoSrc","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,G,MAAA,IAA0B,kC,oDCKnCA,EADcC,EAAQ,IACDC,MAAMC,OAAOC,SAASC,QAC3CC,GCDEH,OAAOI,UAAUC,UACNL,OAAOI,UAAUC,UAAU,GAE3BL,OAAOI,UAAUE,cAAgBN,OAAOI,UAAUG,UAS3CC,MAAM,KACd,IDZ0B,KACtCC,EAAKC,mBAAmBb,EAAOY,GAAKZ,EAAOY,GAAKN,GAChDQ,EAAkBC,0BAMxB,IAAIC,EAAa,GAEjB,SAASC,EAAEC,EAAKC,GACd,OAAOH,EAAWE,GAAKE,SAAWD,EAG7B,SAASE,EAAT,GAAyC,IAAbC,EAAY,EAAZA,SAAY,EACfC,oBAAS,GADM,mBACtCC,EADsC,KAC7BC,EAD6B,KAE7CC,qBAAU,YACE,uCAAG,4BAAAC,EAAA,+EAEUC,MAAM,YAAD,OAAahB,EAAb,mBAFf,cAEHiB,EAFG,gBAGUA,EAAKC,OAHf,OAGTd,EAHS,uDAKTA,EAAae,EALJ,QAOXN,GAAW,GAPA,yDAAH,qDASVO,KACC,IACH,IAAMC,EAAQ,CAAEhB,IAAGL,MACnB,OACE,cAACE,EAAgBoB,SAAjB,CAA0BD,MAAOA,EAAjC,SACGT,EAAU,qBAAKW,GAAG,cAAqBb,IEL/Bc,MA5Bf,WAAgB,IACNnB,EFMDoB,qBAAWvB,GENVG,EACFqB,EAAOrB,EAAE,QACTsB,EAAOtB,EAAE,QACTuB,EAAMvB,EAAE,OACRwB,EAAexB,EAAE,gBACjByB,EAAazB,EAAE,cAErB,OACE,qBAAK0B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAASF,UAAU,WAAWG,IAAKR,IAC7C,8BACGC,EADH,IACS,8CADT,IACkCC,EADlC,IACwCC,EADxC,OAGA,mBACEE,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,SAMGP,UCbIQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAACxC,EAAD,UACE,cAAC,EAAD,QAGNyC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.066792ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { getBrowserLocale } from \"../services/helper\";\nimport enLocale from \"../scripts/locale_en.json\";\n\nconst queryString = require(\"query-string\");\nconst parsed = queryString.parse(window.location.search);\nconst defaultLocale = getBrowserLocale() || \"en\";\nconst hl = decodeURIComponent(parsed.hl ? parsed.hl : defaultLocale);\nconst LanguageContext = createContext();\n\nexport function useLanguage() {\n  return useContext(LanguageContext);\n}\n\nlet localeData = {};\n\nfunction t(key, defaultValue) {\n  return localeData[key].message || defaultValue;\n}\n\nexport function LanguageProvider({ children }) {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const data = await fetch(`_locales/${hl}/messages.json`);\n        localeData = await data.json();\n      } catch (e) {\n        localeData = enLocale;\n      }\n      setLoading(false);\n    };\n    init();\n  }, []);\n  const value = { t, hl };\n  return (\n    <LanguageContext.Provider value={value}>\n      {loading ? <div id=\"spinner-1\"></div> : children}\n    </LanguageContext.Provider>\n  );\n}\n","/**\n * Detect browser language id\n * */\nconst getBrowserLangId = () => {\n    let language;\n    if (window.navigator.languages) {\n        language = window.navigator.languages[0];\n    } else {\n        language = window.navigator.userLanguage || window.navigator.language;\n    }\n    return language;\n};\n/**\n * Get browser Locale\n * */\nconst getBrowserLocale = () => {\n    const langId = getBrowserLangId();\n    const locale = langId.split(\"-\");\n    return locale[0];\n};\n\nexport {\n    getBrowserLocale\n}","import logoSrc from './logo.svg';\nimport './App.css';\nimport { useLanguage } from \"./contexts/LanguageContext\";\n\nfunction App() {\n  const { t } = useLanguage();\n  const logo = t(\"logo\"); // logo\n  const edit = t(\"edit\"); // edit\n  const and = t(\"and\"); // and\n  const saveToReload = t(\"saveToReload\"); //  save to reload\n  const learnReact = t(\"learnReact\"); //  Learn React\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logoSrc} className=\"App-logo\" alt={logo} />\n        <p>\n          {edit} <code>src/App.js</code> {and} {saveToReload}.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {learnReact}\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <LanguageProvider>\n        <App />\n      </LanguageProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}